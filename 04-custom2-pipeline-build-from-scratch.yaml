# Stages
# Stage-1:
  # Task-1: Build Docker Image and push to Azure Container Registry ACR
  # Task-2: Copy kube-manifest files to Build Artifact Directory
  # Task-3: Publish build articats to Azure Pipelines
# Pipeline Hierarchial Flow: Stages -> Stage -> Jobs -> Job -> Steps -> Task1, Task2, Task3  

trigger:
- master

stages:
  - stage: BuildStage
    displayName: Build Stage
    jobs:
      - job: Build
        displayName: Build Job
        pool:
          name: 'ubuntu-latest'
        steps:
        # Task-1: Build Docker Image and push to Azure Container Registry ACR
        - task: Docker@2
          inputs:
            containerRegistry: 'manual-acr-connection-svc'
            repository: 'stihl7'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'
        # Task-2: Copy kube-manifest files to Build Artifact Directory
        ## Publish Artifacts Pipeline Code in addition to Build and Push to ACR
        - bash: echo Contents in the SystemDefaultWorking Directory; ls -R $(System.DefaultWorkingDirectory)
        - bash: echo Before copying contents into the Build Artifact Directory; ls -R $(Build.ArtifactStagingDIrectory)
        ## Copy the files from the Source Folder to the Target folder. The Source folder is the root folder of a project's
        ## assets. In this case (in most cases, in fact) this is the root of the git repo. But it could be a local folder,
        ## for example, in the case of usig a self-hosted agent.
        ## Source Directory: $(System.DefaultWorkingDirectory)/kube-manifests
        ## Target Directory: 
        - task: CopyFiles@2 
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)/kube-manifests'
            Contents: '**'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
        ## Task-3: Publish build articats to Azure Pipelines            
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'kube-manifests'
            publishLocation: 'Container'
        - bash: echo After copying contents into the Build Artifact Directory; ls -R $(Build.ArtifactStagingDIrectory)
